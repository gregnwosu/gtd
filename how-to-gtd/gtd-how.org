* Get Things Done!!
https://emacs.cafe/emacs/orgmode/gtd/2017/06/30/orgmode-gtd.html
** How to
keep all active projects here
Each project contains actions to be performed.
The first action of each project is called its "next action"
Always do the "next action" when working on a project.
Once the task is done make it as such using the *DONE* keywords
** keys
*** completion percentage
*** keys
* completion percentage
#+BEGIN_EXAMPLE
add x of n completion  [/]
add competion percentage [%]
#+END_EXAMPLE
*** tagging
used for linking to:
- categories like :study: , :career:, :relationship:
- persons associated with a task e.g. :mrlister:
- GTD Contexts
 #+BEGIN_EXAMPLE
 C-c C-C on a headline ads a tag
 #+END_EXAMPLE
*** contexts
these change but now we have
#+BEGIN_EXAMPLE
@home
@office
@fitness
@children
@relationship
@phone
@email
@study
@hacking
#+END_EXAMPLE
*** keywords
     used for *all* project entries
cycle through them when on a headline  via C-<left>/<right>
#+BEGIN_EXAMPLE
TODO (C-c C-t when on a headline)
WAITING
DONE
CANCELLED
#+END_EXAMPLE
*** scheduling
your context determines what you will be working
only schedule if:
- specific appointment like dentist
- or deadlined
#+BEGIN_EXAMPLE
Schedule an Entry      C-c C-s on a headline
Add a deadline         C-c C-d on a headline
#+END_EXAMPLE

*** filtering
**** general
when deciding what to work on
#+BEGIN_EXAMPLE
filter the org tree C-c /
filter the org tree by regex C-c / r  or C-c / /
move to next match M-g n  or M-g M-n
move to previous match M-g p or M-g M-p
#+END_EXAMPLE
**** by context or status / Agenda commands
#+BEGIN_EXAMPLE
C-c a to select and agenda command
#+END_EXAMPLE
***** by status
 for frequent tree search define a custom command
 e.g.
 #+BEGIN_SRC emacs-lisp
 (setq org-agenda-custom-commands '(("f" occur-tree "FIXME")))
 #+END_SRC
 this defines C-c a f as a shortcut for creating a sparse tree matching
 fixme
***** by context
#+BEGIN_SRC emacs-lisp
  (setq org-agenda-custom-commands '(("o" "At the office" tags-todo "@office" ((org-agenda-overriding-header "Office")))))
#+END_SRC

**** filtering
***** general
 when deciding what to work on
 #+BEGIN_EXAMPLE
 filter the org tree C-c /
 filter the org tree by regex C-c / r  or C-c / /
 move to next match M-g n  or M-g M-n
 move to previous match M-g p or M-g M-p
 #+END_EXAMPLE
***** by context or status / Agenda commands
#+BEGIN_EXAMPLE
C-c a to select and agenda command
#+END_EXAMPLE
****** by status
  for frequent tree search define a custom command
  e.g.
  #+BEGIN_SRC emacs-lisp
  (setq org-agenda-custom-commands '(("f" occur-tree "FIXME")))
  #+END_SRC
  this defines C-c a f as a shortcut for creating a sparse tree matching
  fixme
****** by context
#+BEGIN_SRC emacs-lisp
  (setq org-agenda-custom-commands '(("o" "At the office" tags-todo "@office" ((org-agenda-overriding-header "Office")))))
#+END_SRC
